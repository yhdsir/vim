
syntax on " 语法高亮


set nobackup " 不产生备份文件


set hlsearch " 搜索时高亮显示被找到的文本

set laststatus=2 " 显示状态栏 (默认值为 1, 无法显示状态栏)

set showcmd " 在底部显示上一条命令

set wildmenu " 打开底部命令行的自动补全

" set nu " 显示行号


set tabstop=4 " 设定tab长度为4个空格


set shiftwidth=4 " 缩进是4个空格


set expandtab " 用空格键替换制表符


set softtabstop=4 " 回退4个空格


set encoding=utf-8 " 字符编码是utf-8


set cindent " 使用 C/C++ 语言的自动缩进方式


set autoindent " 设置自动对齐(缩进)：即每行的缩进值与上一行相等


" set linebreak " 整词换行
let mapleader = ","

set relativenumber
set number

nnoremap <Space>w :w<cr>
nnoremap <Space>q :q<cr>
nnoremap <Space>q! :q!<cr>
nnoremap <Space>sc :nohlsearch<cr>


" quit insert mode
inoremap jj <Esc>
inoremap jk <Esc>
inoremap kk <Esc>

" Insert mode shortcut
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
inoremap <C-d> <Delete>
inoremap <C-a> <Home>

inoremap <C-]> <C-X><C-]>
inoremap <C-F> <C-X><C-F>
inoremap <C-D> <C-X><C-D>
inoremap <C-L> <C-X><C-L>

"inoremap <C-i> <End>


" 窗口
nnoremap <Space>ww <C-w>w
nnoremap <Space>wj <C-w>j
nnoremap <Space>wk <C-w>k
nnoremap <Space>wh <C-w>h
nnoremap <Space>wl <C-w>l
" 关闭窗口
nnoremap <Space>wc <C-w>c
" 上下分屏
nnoremap <Space>ws <C-w>s
" 左右分屏
nnoremap <Space>wv <C-w>v



"""""""""""""" 块选择
" 设置快捷键将选中文本块复制至系统剪贴板
vnoremap <leader>y "+y
vnoremap <C-c> "+y
vnoremap <C-v> "+p

" 设置快捷键将系统剪贴板内容粘贴至 vim
noremap <leader>p "+p
vnoremap <leader>p "+p
inoremap <leader>p <Esc>"+p

set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936

" colorscheme morning
set t_Co=256
set term=xterm-256color
set background=dark


" =========
" 功能函数
" =========
" 获取当前目录
func GetPWD()
    return substitute(getcwd(), "", "", "g")
endf

" 命令行于状态行
set ch=1
set stl=\ [File]\ %F%m%r%h%y[%{&fileformat},%{&fileencoding}]\ %w\ \ [PWD]\ %r%{GetPWD()}%h\ %=\ [Line]\ %l,%c\ %=\ %P
set ls=2 " 始终显示状态行

" 行号和标尺
set number 
set ruler
set rulerformat=%15(%c%V\ %p%%%)

" 缩进 智能对齐方式
set autoindent
set smartindent

" 行控制
set linebreak
set nocompatible
set textwidth=80
set wrap

"置粘贴模式，这样粘贴过来的程序代码就不会错位了。
set paste


"设置VIM状态栏
set laststatus=2 "显示状态栏(默认值为1, 无法显示状态栏)
set statusline= " [%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]
" set statusline+=%2*%-3.3n%0*\ " buffer number
set statusline+=[File]\ %f\ " file name
set statusline+=%h%1*%m%r%w%0* " flag
set statusline+=[
if v:version >= 600
    set statusline+=%{strlen(&ft)?&ft:'none'}, " filetype
    set statusline+=%{&fileencoding}, " encoding
endif
set statusline+=%{&fileformat}] " file format
set statusline+=%w\ \ [PWD]\ %r%{GetPWD()} " file format
set statusline+=%= " right align
" set statusline+=%2*0x%-8B\ " current char
set statusline+=0x%-8B\ " current char
set statusline+=[Line]\ %-14.(%l,%c%V%)\ %<%P " offset


" =========
" 不显示行数
" 命令行调用:call HideNumber()
" =========
func HideNumber()
    set nonumber
    set norelativenumber
endf

" =========
" 显示行数
" 命令行调用:call ShowNumber()
" =========
function ShowNumber()
    set number
    set relativenumber
endfunction


"置粘贴模式，这样粘贴过来的程序代码就不会错位了。
" set paste

set showcmd " 在底部显示上一条命令

set wildmenu " 打开底部命令行的自动补全
